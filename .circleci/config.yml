---
defaults: &defaults
  working_directory: ~/cli
  docker:
    - image: node:8.4
      environment: &env
        NPM_CONFIG_REGISTRY: https://cli-npm.heroku.com

version: 2
executorType: docker
jobs:
  test:
    <<: *defaults
    docker: &windows_docker
      - image: dickeyxxx/cli-engine-docker:v2.1.0
        environment: *env
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-test-{{ checksum "yarn.lock" }}
            - v2-test
      - run: ./scripts/prep
      - run: ./scripts/test
      - save_cache:
          key: v2-test-{{ checksum "yarn.lock" }}
          paths:
            - /usr/local/share/.cache/yarn
            - ~/cli/node_modules
  build_darwin_x64:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: &release_target_yarn_cache
          keys:
            - v3-release-target-yarn-{{ checksum "yarn.lock" }}
            - v3-release-target-yarn
      - restore_cache: {keys: [node-v8.3.0-darwin-x64]}
      - run: ./scripts/build/darwin
      - persist_to_workspace: &persist_workspace
          root: dist
          paths:
            - darwin-x64
            - heroku-cli-darwin-x64.tar.gz
            - heroku-cli-darwin-x64.tar.xz
            - apt/heroku_i386.deb
      - save_cache:
          key: v3-release-target-yarn-{{ checksum "yarn.lock" }}
          paths: [/usr/local/share/.cache/yarn]
      - save_cache: &node_cache_save
          key: node-v8.3.0-darwin-x64
          paths: [~/cli/tmp/cache/node]
  build_linux_x64:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *release_target_yarn_cache
      - restore_cache: {keys: [node-v8.3.0-linux-x64]}
      - run: ./scripts/build/linux
      - persist_to_workspace:
          <<: *persist_workspace
          paths:
            - linux-x64
            - heroku-cli-linux-x64.tar.gz
            - heroku-cli-linux-x64.tar.xz
            - apt/heroku_amd64.deb
      - save_cache: &node_cache_save
          key: node-v8.3.0-linux-x64
          paths: [~/cli/tmp/cache/node]
  build_linux_x86:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *release_target_yarn_cache
      - restore_cache: {keys: [node-v8.3.0-linux-x86]}
      - run: ./scripts/build/linux
      - persist_to_workspace:
          <<: *persist_workspace
          paths:
            - linux-x86
            - heroku-cli-linux-x86.tar.gz
            - heroku-cli-linux-x86.tar.xz
            - apt/heroku_i386.deb
      - save_cache: &node_cache_save
          key: node-v8.3.0-linux-x86
          paths: [~/cli/tmp/cache/node]
  build_linux_arm:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *release_target_yarn_cache
      - restore_cache: {keys: [node-v8.3.0-linux-arm]}
      - run: ./scripts/build/linux
      - persist_to_workspace:
          <<: *persist_workspace
          paths:
            - linux-arm
            - heroku-cli-linux-arm.tar.gz
            - heroku-cli-linux-arm.tar.xz
            - apt/heroku_armel.deb
      - save_cache: &node_cache_save
          key: node-v8.3.0-linux-arm
          paths:
            - linux-arm
            - heroku-cli-linux-arm.tar.gz
            - heroku-cli-linux-arm.tar.xz
  build_windows_x64:
    <<: *defaults
    docker: *windows_docker
    steps:
      - checkout
      - restore_cache: *release_target_yarn_cache
      - restore_cache: {keys: [node-v8.3.0-windows-x64]}
      - run: ./scripts/build/windows
      - persist_to_workspace:
          <<: *persist_workspace
          paths:
            - windows-x64
            - heroku-cli-windows-x64.tar.gz
            - heroku-cli-windows-x64.tar.xz
      - save_cache: &node_cache_save
          key: node-v8.3.0-windows-x64
          paths: [~/cli/tmp/cache/node]
  build_windows_x86:
    <<: *defaults
    docker: *windows_docker
    steps:
      - checkout
      - restore_cache: *release_target_yarn_cache
      - restore_cache: {keys: [node-v8.3.0-windows-x86]}
      - run: ./scripts/build/windows
      - persist_to_workspace:
          <<: *persist_workspace
          paths:
            - windows-x86
            - heroku-cli-windows-x86.tar.gz
            - heroku-cli-windows-x86.tar.xz
      - save_cache: &node_cache_save
          key: node-v8.3.0-windows-x86
          paths: [~/cli/tmp/cache/node]
  release:
    <<: *defaults
    docker:
      - image: dickeyxxx/cli-engine-docker:v3.0.3
        environment: *env
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - run: ls dist && ls dist/app
      - run: ./scripts/release/circle
workflows:
  version: 2
  heroku_cli:
    jobs:
      - test:
          filters: &all_pushes
            tags: &version_tags
              only: /^v.*/
      - build_darwin_x64: &build_step
          filters: *all_pushes
      - build_linux_x64: *build_step
      - build_linux_x86: *build_step
      - build_linux_arm: *build_step
      - build_windows_x64: *build_step
      - build_windows_x86: *build_step
      - release:
          filters: &release_filters
            tags: *version_tags
            branches:
              only:
                - master
                - dev
                - streamline
          requires:
            - test
            - build_darwin_x64
            - build_linux_x64
            - build_linux_x86
            - build_linux_arm
            - build_windows_x64
            - build_windows_x86
