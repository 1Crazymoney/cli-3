#!/usr/bin/env bash

export OS=windows

source ./scripts/main
source ./scripts/circle/vars

# setup workspace
INSTALLER_BASE=$root/tmp/windows-$ARCH-installer
WINEPREFIX=$root/tmp/wine/windows-$ARCH-installer

rm -rf "$INSTALLER_BASE"
rm -rf "$WINEPREFIX"

mkdir -p "$INSTALLER_BASE/bin"
mkdir -p "$WINEPREFIX"

cp resources/exe/heroku.cmd "$INSTALLER_BASE/bin/heroku.cmd"

cp -r "${BASE_PATH}" "$INSTALLER_BASE/client"

if [ "$ARCH" == "x64" ]; then
  PROGRAMSUFFIX="64"
else
  PROGRAMSUFFIX=""
fi

sed -e "s/!define Version 'VERSION'/!define Version '${VERSION}'/" resources/exe/heroku.nsi |\
  sed -e "s/InstallDir .*/InstallDir \"\$PROGRAMFILES$PROGRAMSUFFIX\\\Heroku\"/" \
  > "$INSTALLER_BASE/heroku.nsi"

makensis -DUNINSTALLER "$INSTALLER_BASE/heroku.nsi" > /dev/null

WINEPREFIX=$WINEPREFIX wine "$INSTALLER_BASE/tmpinstaller.exe" /S

rm "$INSTALLER_BASE/tmpinstaller.exe"

function finish {
  rm /tmp/heroku-windows-key
}

trap finish EXIT

set +x

echo "$HEROKU_WINDOWS_KEY" | base64 -d > /tmp/heroku-windows-key

osslsigncode -pkcs12 /tmp/heroku-windows-key \
  -pass "$HEROKU_WINDOWS_SIGNING_PASS" \
  -n 'Heroku CLI' \
  -i https://toolbelt.heroku.com/ \
  -in "$WINEPREFIX/drive_c/Program Files/Heroku/Uninstall.exe" -out "$INSTALLER_BASE/uninstall.exe"

set -x

makensis "$INSTALLER_BASE/heroku.nsi" > /dev/null

DIST_DIR="dist/${VERSION}"

mkdir -p "$DIST_DIR"

INSTALLER_EXE="heroku-$ARCH.exe"
INSTALLER="$DIST_DIR/$INSTALLER_EXE"

set +x

osslsigncode -pkcs12 /tmp/heroku-windows-key \
  -pass "$HEROKU_WINDOWS_SIGNING_PASS" \
  -n 'Heroku CLI' \
  -i https://toolbelt.heroku.com/ \
  -in "$INSTALLER_BASE/installer.exe" -out "$INSTALLER"

set -x

s3uploadDayCache "$INSTALLER" "$REMOTE_BASE/$INSTALLER_EXE"
