#!/usr/bin/env bash

# shellcheck disable=SC2034

# fail wait when any children fails
set -m

set -o errexit
set -o pipefail
set -o nounset
# set -o xtrace

# Set magic variables for current file & dir
dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
root="$(cd "$(dirname "${dir}")" && pwd)"
scripts="$root/scripts"
tmp="$root/tmp"
dist="$root/dist"
dist_deb="$root/dist/apt"

CHANNEL=$("$scripts/_vars/_channel")
VERSION=$("$scripts/_vars/_version")
SHORT_VERSION=$(node -p "require('$root/package.json').version")
DEB_VERSION="${SHORT_VERSION}-1"

PLATFORMS=(
  windows_x86
  windows_x64
  darwin_x64
  linux_x86
  linux_x64
  linux_arm
)

DEB_ARCHS=(
  x64
  x86
  arm
)


function split_platform () {
  IFS='_' read -ra _platform <<< "$1"
  export OS=${_platform[0]}
  export ARCH=${_platform[1]}
}

if [[ "${CIRCLE_JOB-}" == build_* ]] && [[ "${CIRCLE_JOB-}" != "build_base" ]] ; then
  IFS='_' read -ra _platform <<< "$CIRCLE_JOB"
  export OS=${_platform[1]}
  export ARCH=${_platform[2]}
fi

function versioned_base () {
  echo "heroku-cli-v${VERSION}-${OS}-${ARCH}"
}
function unversioned_base () {
  echo "heroku-cli-${OS}-${ARCH}"
}

function base_dir () {
  echo "$tmp/base"
}

function workspace_dir () {
  echo "$tmp/${OS}_${ARCH}"
}

function tgz_path () {
  echo "$dist/$(unversioned_base).tar.gz"
}
function txz_path () {
  echo "$dist/$(unversioned_base).tar.xz"
}

function go_home () {
  cd "${root}"
}
go_home

function bg () {
  "$@" &
  pids="${pids:-} $!"
}

function wait_all () {
  for pid in $pids; do
    wait "${pid}" || exit 1
  done
}

function s3upload () {
  aws s3 cp "$@"
}
function s3uploadLongCache () {
  s3upload --cache-control max-age=86400 "$@"
}
function s3uploadShortCache () {
  s3upload --cache-control max-age=3600 "$@"
}

function deb_arch () {
  if [[ "$ARCH" = "x64" ]]; then
    echo "amd64"
  elif [[ "$ARCH" = "x86" ]]; then
    echo "i386"
  elif [[ "$ARCH" = "arm" ]]; then
    echo "armel"
  fi
}
function unversioned_deb_base () {
  echo "heroku_$(deb_arch)"
}
function unversioned_deb_path () {
  echo "$dist_deb/$(unversioned_deb_base).deb"
}
function versioned_deb_base () {
  echo "heroku_${DEB_VERSION}_$(deb_arch)"
}
function versioned_deb_path () {
  echo "$dist_deb/$(versioned_deb_base).deb"
}
