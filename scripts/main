#!/usr/bin/env bash

# shellcheck disable=SC2034

# fail wait when any children fails
set -m

set -o errexit
set -o pipefail
set -o nounset
# set -o xtrace

# Set magic variables for current file & dir
dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
root="$(cd "$(dirname "${dir}")" && pwd)"

function version () {
  go_home
  if [[ -z "${_version-}" ]]; then
    _version=$(node -p "require('./package.json').version")
  fi
  echo "${_version}"
}

function node_version () {
  go_home
  if [[ -z "${_node_version-}" ]]; then
    _node_version=$(node -p "require('./package.json')['cli-engine'].node || process.versions.node")
  fi
  echo "${_node_version}"
}

function go_home () {
  cd "${root}"
}
go_home

function bg () {
  "$@" &
  pids="${pids:-} $!"
}

function wait_all () {
  for pid in $pids; do
    wait "${pid}" || exit 1
  done
}

function s3upload () {
  aws s3 cp --quiet "$@"
}
function s3uploadDayCache () {
  s3upload --cache-control max-age=86400 "$@"
}
function s3uploadHourCache () {
  s3upload --cache-control max-age=3600 "$@"
}

CHANNEL=${CHANNEL:=$(./scripts/circle/channel)}
remote_base=s3://$S3_BUCKET/heroku-cli/channels/$CHANNEL

if [[ ! -z "${CIRCLE_JOB-}" ]]; then
  IFS='_' read -ra _circle_job <<< "$CIRCLE_JOB"
  OS=${OS:=${_circle_job[0]-}}
  ARCH=${ARCH:=${_circle_job[1]-}}
fi
