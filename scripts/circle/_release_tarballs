#!/usr/bin/env bash

set -x

source ./scripts/circle/_init

LONG_CACHE_DIR="$TMP_DIR/s3/long"
SHORT_CACHE_DIR="$TMP_DIR/s3/short"

mkdir -p "$LONG_CACHE_DIR"
mkdir -p "$SHORT_CACHE_DIR"

PLATFORMS=(
  darwin_x64
  linux_x64
)
# PLATFORMS=(
#   windows_x86
#   windows_x64
#   darwin_x64
#   linux_x86
#   linux_x64
#   linux_arm
# )

for PLATFORM in "${PLATFORMS[@]}"; do
  IFS='_' read -ra _info <<< "$PLATFORM"
  OS=${_info[0]}
  ARCH=${_info[1]}
  VERSIONED_BASE="heroku-cli-v${VERSION}-${OS}-${ARCH}"
  UNVERSIONED_BASE="heroku-cli-${OS}-${ARCH}"

  mv "${root}/tmp/tarballs/${BASE}.tar.xz" "${REMOTE_BASE}/${BASE}.tar.xz"
  mv "${root}/tmp/tarballs/${BASE}.tar.gz" "${REMOTE_BASE}/${BASE}.tar.gz"
  mv "${REMOTE_BASE}/${BASE}.tar.xz" "${REMOTE_BASE}/heroku-cli-$OS-$ARCH.tar.xz"
  mv "${REMOTE_BASE}/${BASE}.tar.gz" "${REMOTE_BASE}/heroku-cli-$OS-$ARCH.tar.gz"
  mv --content-type application/json "${root}/tmp/tarballs/$OS-$ARCH" "${REMOTE_BASE}/$OS-$ARCH"
  mv "$TMP_DIR/${OS}_${ARCH}/dist"
done

s3uploadDayCache "${root}/tmp/tarballs/${BASE}.tar.xz" "${REMOTE_BASE}/${BASE}.tar.xz"
s3uploadDayCache "${root}/tmp/tarballs/${BASE}.tar.gz" "${REMOTE_BASE}/${BASE}.tar.gz"
s3uploadHourCache "${REMOTE_BASE}/${BASE}.tar.xz" "${REMOTE_BASE}/heroku-cli-$OS-$ARCH.tar.xz"
s3uploadHourCache "${REMOTE_BASE}/${BASE}.tar.gz" "${REMOTE_BASE}/heroku-cli-$OS-$ARCH.tar.gz"
s3uploadHourCache --content-type application/json "${root}/tmp/tarballs/$OS-$ARCH" "${REMOTE_BASE}/$OS-$ARCH"

# wait_all
